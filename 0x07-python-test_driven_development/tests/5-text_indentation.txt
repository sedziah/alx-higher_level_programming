The ``5-text_indentation`` module
============================

Using the ``text_indentation`` function
---------------------------------------

Importing function from module
>>> text_indentation = __import__("5-text_indentation").text_indentation


Case 1: Passing Valid Inputs
-------------------------------

Passing a sample string
>>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres""")
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
<BLANKLINE>
Quonam modo?
<BLANKLINE>
Utrum igitur tibi litteram videor an totas paginas commovere?
<BLANKLINE>
Non autem hoc:
<BLANKLINE>
igitur ne illud quidem.
<BLANKLINE>
Fortasse id optimum, sed ubi illud:
<BLANKLINE>
Plus semper voluptatis?
<BLANKLINE>
Teneo, inquit, finem illi videri nihil dolere.
<BLANKLINE>
Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
<BLANKLINE>
Si id dicis, vicimus.
<BLANKLINE>
Inde sermone vario sex illa a Dipylo stadia confecimus.
<BLANKLINE>
Sin aliud quid voles, postea.
<BLANKLINE>
Quae animi affectio suum cuique tribuens atque hanc, quam dico.
<BLANKLINE>
Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

Passing a text with spaces around
>>> text_indentation("     best school; ever!     ")
best school; ever!

Passing special characters
>>> text_indentation("?.:;") #doctest: +REPORT_NDIFF
?
<BLANKLINE>
.
<BLANKLINE>
:
<BLANKLINE>
;

Passing a text with special characters
>>> text_indentation("There is: something big? Inside me. I can feel it rising.")
There is:
<BLANKLINE>
something big?
<BLANKLINE>
Inside me.
<BLANKLINE>
I can feel it rising.
<BLANKLINE>

Passing a new line character
>>> text_indentation("\n")
<BLANKLINE>

Passing special characters
>>> text_indentation("\n.\n?\n:")
<BLANKLINE>
.
<BLANKLINE>
<BLANKLINE>
?
<BLANKLINE>
<BLANKLINE>
:
<BLANKLINE>

Passing a text with spaces and one new line
>>> text_indentation("   \n")
<BLANKLINE>

Passing spaces and one new line
>>> text_indentation("   \n   ")
<BLANKLINE>

Passing spaces and one new line
>>> text_indentation("\n   ")
<BLANKLINE>

Passing an empty string
>>> text_indentation("")

Passing blanks
>>> text_indentation(" ")


Case 2: Passing Invalid inputs
-------------------------------------

Invoking function without arguments
>>> text_indentation()
Traceback (most recent call last):
  ...
TypeError: text_indentation() missing 1 required positional argument: 'text'

Passing an integer
>>> text_indentation(7)
Traceback (most recent call last):
  ...
TypeError: text must be a string

Passing a float
>>> text_indentation(3.5)
Traceback (most recent call last):
  ...
TypeError: text must be a string

Passing None
>>> text_indentation(None)
Traceback (most recent call last):
  ...
TypeError: text must be a string
